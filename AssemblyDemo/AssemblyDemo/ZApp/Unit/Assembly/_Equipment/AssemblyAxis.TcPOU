<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="AssemblyAxis" Id="{b10c077a-2eff-4a95-b93e-86880fe5a04a}" SpecialFunc="None">
    <Declaration><![CDATA[/// This function block is a container for all axis objects that are used by this unit.
/// The parent of all objects can be directly transfered in their constructor (this is only relevant for equipment objects
/// that have to be managed (e.g. [DebouncedInput](xref:ZEquipment.DebouncedInput), [Light](xref:ZEquipment.Light), ...).
FUNCTION_BLOCK AssemblyAxis EXTENDS AssemblyContainer
VAR
  {attribute 'hide'}
  _axisbridge : ZApplication.AxisBridge(_parent);
END_VAR
VAR_INPUT

{region "Vertical : AxisPlcOpenMc"}
  Vertical : ZEquipment.AxisPlcOpenMc(_parent);
  {attribute 'ZId' := '59ce020b-a4f8-4d7a-a0dc-8b778ee4fde8'}
{endregion}

{attribute '__ZwPlcUnitEquipmentDeclaration__'} // Do not remove this attribute! It is used for code generation.
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF _isInitialized
THEN
  RETURN;
END_IF

  _axisbridge.SetLogger(_parent._logger);

{region "Vertical : AxisPlcOpenMc"}
  Vertical.SetLogger(_parent._logger);
  Vertical.SetName(name:='Vertical');
  Vertical.SetSimulation(_parent._data.Config.Simulated);
  _axisbridge.AddAxisPlcOpenMc(axis:=Vertical, publish:=_parent._com.Publish.Equipment.Vertical, subscribe:=_parent._com.Subscribe.Equipment.Vertical);

  {region "UserInitCode"}
  // put your individual init code for this Axis here
  {endregion}

  {attribute 'ZId' := '59ce020b-a4f8-4d7a-a0dc-8b778ee4fde8'}
{endregion}

{attribute '__ZwPlcUnitEquipmentImplementation__'} // Do not remove this attribute! It is used for code generation.

_isInitialized := TRUE;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>